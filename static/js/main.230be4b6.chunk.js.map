{"version":3,"sources":["Components/Navbar/issa-logo.png","Components/Navbar/Menuitems.js","Components/Navbar/Navbar.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menuitem","cname","name","link","Navbar","state","clicked","clickedeventHandler","setState","className","this","src","logo","width","onClick","map","item","index","key","href","Component","Footer","target","aria-hidden","class","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,uC,4NC6B5BC,G,WA3BE,CACb,CACIC,MAAO,YACPC,KAAM,OACNC,KAAM,KAEV,CACIF,MAAO,YACPC,KAAM,SACNC,KAAM,KAEV,CACIF,MAAO,YACPC,KAAM,WACNC,KAAM,KAEV,CACIF,MAAO,YACPC,KAAM,iBACNC,KAAM,KAEV,CACIF,MAAO,YACPC,KAAM,gBACNC,KAAM,O,gBCeCC,E,4MAlCfC,MAAM,CAAEC,SAAS,G,EAEjBC,oBAAsB,WAClB,EAAKC,SAAS,CAACF,SAAU,EAAKD,MAAMC,W,uDAIpC,OACA,yBAAKG,UAAU,UACX,6BACA,yBAAKA,UAAWC,KAAKL,MAAMC,QAAU,MAAQ,OAAQK,IAAKC,IAAMC,MAAM,SACtE,wBAAIJ,UAAU,SAAd,SAEA,yBAAKA,UAAU,YAAYK,QAASJ,KAAKH,qBACrC,uBAAGE,UAAWC,KAAKL,MAAMC,QAAU,eAAiB,iBAExD,6BACI,wBAAIG,UAAWC,KAAKL,MAAMC,QAAU,cAAgB,QAASN,EAASe,KAAI,SAACC,EAAMC,GAC7E,OACA,wBAAIC,IAAKD,GACL,uBAAGR,UAAWO,EAAKf,MAAOkB,KAAMH,EAAKb,MAAOa,EAAKd,iB,GArBhDkB,aCsBNC,G,6KArBP,OACI,4BAAQZ,UAAU,QACd,yBAAKA,UAAU,SACP,wBAAIA,UAAU,iDACN,4BAAI,uBAAGU,KAAK,+BAA+BG,OAAO,UAAS,uBAAGb,UAAU,eAAec,cAAY,WACnG,4BAAI,uBAAGJ,KAAK,IAAIG,OAAO,UAAS,uBAAGb,UAAU,iBAAiBc,cAAY,WAC1E,4BAAI,uBAAGJ,KAAK,2DAA2DG,OAAO,UAAS,uBAAGb,UAAU,qBAAqBc,cAAY,WACrI,4BAAI,uBAAGJ,KAAK,sCAAsCG,OAAO,UAAS,uBAAGb,UAAU,kBAAkBc,cAAY,WAC7G,4BAAI,uBAAGJ,KAAK,IAAIG,OAAO,UAAS,uBAAGb,UAAU,oBAAoBc,cAAY,aAG7F,uBAAGJ,KAAK,aAAaK,MAAM,6CACvB,yBAAKf,UAAU,kDAAkDE,IAAKC,IAAMC,MAAM,UAEtF,yBAAKW,MAAM,qCACP,uBAAGf,UAAU,UAAUU,KAAK,IAA5B,oB,GAjBCC,cC0BNK,E,uKAvBb,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKhB,UAAU,0BAAf,uBACsB,6BADtB,6BAE4B,6BAF5B,wCAGuC,6BAHvC,+BAI8B,6BAJ9B,gDAK+C,6BAC7C,6BACE,6BADF,8CAE6C,6BAF7C,iJAGgJ,6BAHhJ,iGAIgG,6BAJhG,yCAKwC,+BAG1C,kBAAC,EAAD,W,GAnBYW,a,MCMEM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.230be4b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/issa-logo.2b7465f8.png\";","import './Navbar.css';\r\n\r\nconst Menuitem = [\r\n    {\r\n        cname: 'nav-items',\r\n        name: 'Home',\r\n        link: '#',\r\n    },\r\n    {\r\n        cname: 'nav-items',\r\n        name: 'Events',\r\n        link: '#',\r\n    },\r\n    {\r\n        cname: 'nav-items',\r\n        name: 'Projects',\r\n        link: '#',\r\n    },\r\n    {\r\n        cname: 'nav-items',\r\n        name: 'Suggestion-Box',\r\n        link: '#',\r\n    },\r\n    {\r\n        cname: 'nav-items',\r\n        name: 'Registeration',\r\n        link: '#',\r\n    }\r\n];\r\nexport default Menuitem;","import React, { Component } from 'react';\r\nimport  Menuitem from './Menuitems.js';\r\nimport './Navbar.css';\r\nimport logo from 'C:/Users/SURAKSH/frontend/firstreact1/src/Components/Navbar/issa-logo.png';\r\n\r\n\r\nclass Navbar extends Component{\r\nstate={ clicked: false}\r\n\r\nclickedeventHandler = () => {\r\n    this.setState({clicked: !this.state.clicked});\r\n}\r\n\r\n    render(){\r\n    return (\r\n    <nav className='navbar'>\r\n        <div>\r\n        <img className={this.state.clicked ? 'rot' : 'logo'} src={logo} width='100%'></img>\r\n        <h1 className='title'>ISSA</h1>\r\n        </div>\r\n        <div className='menu-icon' onClick={this.clickedeventHandler}>\r\n            <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n        </div>\r\n        <div>\r\n            <ul className={this.state.clicked ? 'list active' : 'list'}>{Menuitem.map((item, index) => {\r\n                return(\r\n                <li key={index}>\r\n                    <a className={item.cname} href={item.link}>{item.name}</a>\r\n                </li>\r\n                    )\r\n                }\r\n            )}\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n            \r\n    )\r\n        }\r\n    };\r\n\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport '../Navbar/Navbar.css';\r\nimport './Footer.css';\r\nimport logo from 'C:/Users/SURAKSH/frontend/firstreact1/src/Components/Navbar/issa-logo.png'\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <footer className='foot'>\r\n                <div className='items'>\r\n                        <ul className='text-center wig d-flex justify-content-center'>\r\n                                <li><a href=\"https://github.com/ISSA-ICON\" target=\"_blank\"><i className=\"fa fa-github\" aria-hidden=\"true\"></i></a></li>\r\n                                <li><a href=\"#\" target=\"_blank\"><i className=\"fa fa-linkedin\" aria-hidden=\"true\"></i></a></li>\r\n                                <li><a href=\"https://www.youtube.com/channel/UCefzYN_1BquuPPVBQJDmKiQ\" target=\"_blank\"><i className=\"fa fa-youtube-play\" aria-hidden=\"true\"></i></a></li>\r\n                                <li><a href=\"https://www.instagram.com/issa_nie/\" target=\"_blank\"><i className=\"fa fa-instagram\" aria-hidden=\"true\"></i></a></li>\r\n                                <li><a href=\"#\" target=\"_blank\"><i className=\"fa fa-google-plus\" aria-hidden=\"true\"></i></a></li>\r\n                        </ul>\r\n                </div>\r\n                <a href=\"index.html\" class=\"text-center d-flex justify-content-center\">\r\n                    <img className='text-center logo1 d-flex justify-content-center' src={logo} width='100%'></img>\r\n                </a>\r\n                <div class=\"footer-copyright text-center py-3\">\r\n                    <a className='contact' href=\"\">Contact Us</a>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport Footer from './Components/Footer/Footer';\n\n\nclass App extends Component{\n  render(){\n  return (\n    <div>\n      <Navbar />\n      <div className='text-center App-header'>\n        Home-yash,vidyashree<br />\n        Events-Sambhav,pooja,Raghu<br />\n        Projects-Rahul,Shivam,udkarsh,Sambhav<br />\n        Suggestion-Box-Shivam,Mohith<br />\n        Registeration-Mohith,Shivam(not requried now)<br/>\n        <div>\n          <br></br>\n          Home-Do it with reference to static website<br />\n          Event-has 2 catagories event of issa and globle events on present ongoing events and other coding events(also include a segment for tech news)<br />\n          Projects-contains a photo of the project discription of it and languages,frameworks used in it<br />\n          Suggestion-You guys discuss and decide<br />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}